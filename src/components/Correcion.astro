---
// Props del componente
interface Props {
    img: string[];
    title: string;
    description: string;
    link: string[];
}

const { img, title, description, link } = Astro.props;
---

<div class="flex items-stretch p-2 gap-4 item transition-colors duration-500 hover:bg-info hover:shadow-2xl rounded-lg sm:p-3 bloque">
    <div class="relative m-auto">
        {img.map((image, index) => (
            <img
                src={image}
                title={title}
                alt={title}
                loading="eager"
                class={`w-32 sm:w-64 object-fill rounded-lg shadow-lg carousel-image ${index !== 0 ? 'hidden' : ''}`}
            />
        ))}
        <div class="absolute bottom-2 left-1/2 transform -translate-x-1/2 flex gap-1">
            {img.map((_, index) => (
                <span
                    class={`w-3 h-3 rounded-full ${index === 0 ? 'bg-info' : 'bg-primary'}`}
                    data-index={index}
                ></span>
            ))}
        </div>
    </div>

    <div class="w-fit">
        <h3 class="text-sm sm:text-lg font-bold text-primary text-justify italic">{title}</h3>
        <p class="text-sm sm:text-lg mt-0.5 text-gray-700 text-justify line-clamp-4 sm:line-clamp-6">
            {description}
        </p>
        {link.map((url, index) => (
            <a
                href={url}
                class={`text-md table text-gray-500 font-semibold mt-4 transition-transform duration-200 hover:text-black hover:translate-x-2 carousel-link ${index !== 0 ? 'hidden' : ''}`}
                target="_blank"
                rel="noopener noreferrer"
            >
                Saber m√°s
            </a>
        ))}
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const carousels = document.querySelectorAll('.bloque');

        carousels.forEach((carousel) => {
            const images = carousel.querySelectorAll('.carousel-image');
            const links = carousel.querySelectorAll('.carousel-link');
            const indicators = carousel.querySelectorAll('[data-index]');
            let currentIndex = 0;

            indicators.forEach((indicator, index) => {
                indicator.addEventListener('click', () => {
                    images[currentIndex].classList.add('hidden');
                    links[currentIndex].classList.add('hidden');
                    indicators[currentIndex].classList.remove('bg-info');
                    indicators[currentIndex].classList.add('bg-primary');

                    currentIndex = index;

                    images[currentIndex].classList.remove('hidden');
                    links[currentIndex].classList.remove('hidden');
                    indicators[currentIndex].classList.remove('bg-primary');
                    indicators[currentIndex].classList.add('bg-info');
                });
            });

            setInterval(() => {
                images[currentIndex].classList.add('hidden');
                links[currentIndex].classList.add('hidden');
                indicators[currentIndex].classList.remove('bg-info');
                indicators[currentIndex].classList.add('bg-primary');

                currentIndex = (currentIndex + 1) % images.length;

                images[currentIndex].classList.remove('hidden');
                links[currentIndex].classList.remove('hidden');
                indicators[currentIndex].classList.remove('bg-primary');
                indicators[currentIndex].classList.add('bg-info');
            }, 4500);
        });
    });
</script>

<style>
    .carousel-image.hidden,
    .carousel-link.hidden {
        display: none;
    }
</style>